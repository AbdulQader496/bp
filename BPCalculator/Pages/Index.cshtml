@page
@model BPCalculator.Pages.BloodPressureModel

@{
    ViewData["Title"] = "BP Category Calculator";
}


<h4>BP Category Calculator</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" id="form1">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BP.Systolic" class="control-label"></label>
                <input asp-for="BP.Systolic" class="form-control"/>
                <span asp-validation-for="BP.Systolic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BP.Diastolic" class="control-label"></label>
                <input asp-for="BP.Diastolic" class="form-control" />
                <span asp-validation-for="BP.Diastolic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
            @if (ViewData.ModelState.IsValid)
            {
                <div class="form-group">
                    @Html.DisplayFor(model => model.BP.Category, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            }
        </form>
    </div>
</div>

@{
    string categoryClass = Model.BP.Category.ToString().ToLower();
}
<div class="bp-category @categoryClass">
    <strong>Blood Pressure Category:</strong> @Model.BP.Category
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<style>
    .bp-category.low {
        background-color: #b724bf; } // light purple
.bp-category.ideal { background-color: lightgreen; }
.bp-category.prehigh { background-color: yellow; }
.bp-category.high { background-color: lightcoral; }
</style>
